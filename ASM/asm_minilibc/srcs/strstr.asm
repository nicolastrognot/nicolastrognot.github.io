section .text				;
	global	strstr:function		;

strstr_strlen:				;
	mov	rax, -1			;
strstr_strlen_begin:			;
	inc	rax			;
	cmp	byte[rsi + rax], 0h 	;
	je	strstr_strlen_end	;
	jmp	strstr_strlen_begin	;
strstr_strlen_end:			;
	jmp	strstr_post_begin	;

strstr_strncmp:				;
	mov	rcx, -1			;
	cmp	rdx, 0h			;
	jle	strstr_strncmp_special	;
strstr_strncmp_begin:			;
	inc	rcx			;
	cmp	rcx, rdx		;
	je	strstr_strncmp_last	;
	cmp	byte[r10 + rcx], 0h	;
	je	strstr_strncmp_return	;
	cmp	byte[rsi + rcx], 0h	;
	je	strstr_strncmp_return	;
	mov	al, byte[r10 + rcx]	;
	cmp	al, byte[rsi + rcx]	;
	jne	strstr_strncmp_return	;
	jmp	strstr_strncmp_begin	;
strstr_strncmp_last:			;
	sub	rcx, 1			;
strstr_strncmp_return:			;
	movsx	rax, byte[r10 + rcx]	;
	movsx	rdx, byte[rsi + rcx]	;
	sub	rax, rdx		;
	jmp	strstr_compared		;
strstr_strncmp_special:			;
	mov	rax, 0h			;
	jmp	strstr_compared		;

strstr:					;
	cmp	rdi, 0h			;
	je	strstr_null		;
	cmp	rsi, 0h			;
	je	strstr_null		;
	jmp	strstr_strlen		;
strstr_post_begin:			;
	mov	rdx, rax		;
	mov	r10, rdi		;
strstr_begin:				;
	cmp	byte[r10], 0h		;
	je	strstr_null		;
	jmp	strstr_strncmp		;
strstr_compared:			;
	cmp	rax, 0h			;
	je	strstr_end		;
	inc	r10			;
	jmp	strstr_begin		;
strstr_end:				;
	sub	r10, 1			;
	mov	rax, r10		;
	ret				;
strstr_null:				;
	mov	rax, 0h			;
	ret				;
